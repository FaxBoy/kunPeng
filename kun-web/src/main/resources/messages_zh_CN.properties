#\u8f93\u51fa\u5f02\u5e38
AbstractAccessDecisionManager.accessDenied = \u4e0d\u5141\u8bb8\u8bbf\u95ee 
AbstractSecurityInterceptor.authenticationNotFound = \u672a\u5728SecurityContext\u4e2d\u67e5\u627e\u5230\u8ba4\u8bc1\u5bf9\u8c61 
AbstractUserDetailsAuthenticationProvider.badCredentials = \u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e 
AbstractUserDetailsAuthenticationProvider.credentialsExpired = \u7528\u6237\u51ed\u8bc1\u5df2\u8fc7\u671f 
AbstractUserDetailsAuthenticationProvider.disabled = \u7528\u6237\u5df2\u5931\u6548 
AbstractUserDetailsAuthenticationProvider.expired = \u7528\u6237\u5e10\u53f7\u5df2\u8fc7\u671f 
AbstractUserDetailsAuthenticationProvider.locked = \u7528\u6237\u5e10\u53f7\u5df2\u88ab\u9501\u5b9a 
AbstractUserDetailsAuthenticationProvider.onlySupports = \u4ec5\u4ec5\u652f\u6301UsernamePasswordAuthenticationToken 
AnonymousAuthenticationProvider.incorrectKey = \u5c55\u793a\u7684AnonymousAuthenticationToken\u4e0d\u542b\u6709\u9884\u671f\u7684key 
AuthByAdapterProvider.incorrectKey = \u5c55\u793a\u7684AuthByAdapter\u5b9e\u73b0\u4e0d\u542b\u6709\u9884\u671f\u7684key 
BasicAclEntryAfterInvocationProvider.insufficientPermission = Authentication\u5bf9\u8c61({0})\u786e\u5b9e\u542b\u6709ACL\u6743\u9650\uff0c\u4f46\u5e76\u4e0d\u662f\u76ee\u6807\u9886\u57df\u5bf9\u8c61\u6240\u8981\u6c42\u7684({1}) 
BasicAclEntryAfterInvocationProvider.noPermission = \u7ed9\u5b9a\u7684Authentication\u5bf9\u8c61({0})\u6839\u672c\u65e0\u6743\u64cd\u63a7\u9886\u57df\u5bf9\u8c61({1}) 
BindAuthenticator.badCredentials = \u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e 
BindAuthenticator.failedToLoadAttributes = \u574f\u7684\u51ed\u8bc1 
CasAuthenticationProvider.incorrectKey = \u5c55\u793a\u7684CasAuthenticationToken\u4e0d\u542b\u6709\u9884\u671f\u7684key 
CasAuthenticationProvider.noServiceTicket = \u672a\u80fd\u591f\u6b63\u786e\u63d0\u4f9b\u5f85\u9a8c\u8bc1\u7684CAS\u670d\u52a1\u7968\u6839 
ConcurrentSessionControllerImpl.exceededAllowed = \u5df2\u7ecf\u8d85\u8fc7\u4e86\u5f53\u524d\u4e3b\u4f53({0})\u88ab\u5141\u8bb8\u7684\u6700\u5927\u4f1a\u8bdd\u6570\u91cf 
DaoX509AuthoritiesPopulator.noMatching = \u672a\u5728subjectDN: {0}\u4e2d\u627e\u5230\u5339\u914d\u7684\u6a21\u5f0f 
DefaultIntitalDirContextFactory.badCredentials = \u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e 
DefaultIntitalDirContextFactory.communicationFailure = \u4e0d\u80fd\u591f\u8fde\u63a5\u5230LDAP\u670d\u52a1\u5668 
DefaultIntitalDirContextFactory.unexpectedException = \u7531\u4e8e\u672a\u9884\u671f\u5f02\u5e38\u800c\u4e0d\u80fd\u591f\u83b7\u5f97InitialDirContext 
DigestProcessingFilter.incorrectRealm = \u54cd\u5e94\u7ed3\u679c\u4e2d\u7684Realm\u540d\u5b57({0})\u540c\u7cfb\u7edf\u6307\u5b9a\u7684Realm\u540d\u5b57({1})\u4e0d\u543b\u5408 
DigestProcessingFilter.incorrectResponse = \u9519\u8bef\u7684\u54cd\u5e94\u7ed3\u679c 
DigestProcessingFilter.missingAuth = \u9057\u6f0f\u4e86\u9488\u5bf9'auth' QOP\u7684\u3001\u5fc5\u987b\u7ed9\u5b9a\u7684\u6458\u8981\u53d6\u503c; \u63a5\u6536\u5230\u7684\u5934\u4fe1\u606f\u4e3a{0} 
DigestProcessingFilter.missingMandatory = \u9057\u6f0f\u4e86\u5fc5\u987b\u7ed9\u5b9a\u7684\u6458\u8981\u53d6\u503c; \u63a5\u6536\u5230\u7684\u5934\u4fe1\u606f\u4e3a{0} 
DigestProcessingFilter.nonceCompromised = Nonce\u4ee4\u724c\u5df2\u7ecf\u5b58\u5728\u95ee\u9898\u4e86\uff0c{0} 
DigestProcessingFilter.nonceEncoding = Nonce\u672a\u7ecf\u8fc7Base64\u7f16\u7801; \u76f8\u5e94\u7684nonce\u53d6\u503c\u4e3a {0} 
DigestProcessingFilter.nonceExpired = Nonce\u5df2\u7ecf\u8fc7\u671f/\u8d85\u65f6 
DigestProcessingFilter.nonceNotNumeric = Nonce\u4ee4\u724c\u7684\u7b2c1\u90e8\u5206\u5e94\u8be5\u662f\u6570\u5b57\uff0c\u4f46\u7ed3\u679c\u5374\u662f{0} 
DigestProcessingFilter.nonceNotTwoTokens = Nonce\u5e94\u8be5\u7531\u4e24\u90e8\u5206\u53d6\u503c\u6784\u6210\uff0c\u4f46\u7ed3\u679c\u5374\u662f{0} 
DigestProcessingFilter.usernameNotFound = \u7528\u6237\u540d{0}\u672a\u627e\u5230 
JdbcDaoImpl.noAuthority = \u6ca1\u6709\u4e3a\u7528\u6237{0}\u6307\u5b9a\u89d2\u8272 
JdbcDaoImpl.notFound = \u672a\u627e\u5230\u7528\u6237{0} 
LdapAuthenticationProvider.emptyPassword = \u574f\u7684\u51ed\u8bc1 
LdapAuthenticationProvider.emptyUsername = \u7528\u6237\u540d\u4e0d\u5141\u8bb8\u4e3a\u7a7a 
NamedCasProxyDecider.untrusted = \u4ee3\u7406({0})\u4e0d\u53d7\u4fe1\u4efb 
PasswordComparisonAuthenticator.badCredentials = \u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e 
ProviderManager.providerNotFound = \u672a\u67e5\u627e\u5230\u9488\u5bf9{0}\u7684AuthenticationProvider 
RejectProxyTickets.reject = Proxy\u7968\u6839\u88ab\u62d2\u7edd 
RememberMeAuthenticationProvider.incorrectKey = \u5c55\u793aRememberMeAuthenticationToken\u4e0d\u542b\u6709\u9884\u671f\u7684key 
RunAsImplAuthenticationProvider.incorrectKey = \u5c55\u793a\u7684RunAsUserToken\u4e0d\u542b\u6709\u9884\u671f\u7684key 
SwitchUserProcessingFilter.credentialsExpired = \u7528\u6237\u51ed\u8bc1\u5df2\u8fc7\u671f 
SwitchUserProcessingFilter.disabled = \u7528\u6237\u5df2\u5931\u6548 
SwitchUserProcessingFilter.expired = \u7528\u6237\u5e10\u53f7\u5df2\u8fc7\u671f 
SwitchUserProcessingFilter.locked = \u7528\u6237\u5e10\u53f7\u5df2\u88ab\u9501\u5b9a 
SwitchUserProcessingFilter.noCurrentUser = \u4e0d\u5b58\u5728\u5f53\u524d\u7528\u6237 
SwitchUserProcessingFilter.noOriginalAuthentication = \u4e0d\u80fd\u591f\u67e5\u627e\u5230\u539f\u5148\u7684\u5df2\u8ba4\u8bc1\u5bf9\u8c61 
SwitchUserProcessingFilter.usernameNotFound = \u7528\u6237\u540d{0}\u672a\u627e\u5230 
UserDetailsService.credentialsExpired = \u7528\u6237\u51ed\u8bc1\u5df2\u8fc7\u671f 
UserDetailsService.disabled = \u7528\u6237\u5df2\u5931\u6548 
UserDetailsService.expired = \u7528\u6237\u5e10\u53f7\u5df2\u8fc7\u671f 
UserDetailsService.locked = \u7528\u6237\u5e10\u53f7\u5df2\u88ab\u9501\u5b9a 
X509AuthenticationProvider.certificateNull = \u672a\u63d0\u4f9b\u8bc1\u4e66