<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-3.0.xsd   
            http://www.springframework.org/schema/aop   
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">  
              
        <!-- 1.加载数据库配置的属性文件 -->     
        <context:property-placeholder location="classpath:jdbc.properties"/>  
          
        <!-- 2.包扫描:dao,service -->  
        <context:component-scan base-package="cn.com.wavenet.hydro.databaseOpt,cn.com.wavenet.hydro"/>  
          
        <!-- 3,dataSource数据源 -->  
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
            <property name="driverClass" value="${jdbc.driverClassName}"/>  
            <property name="jdbcUrl" value="${jdbc.url}"/>  
            <property name="user" value="${jdbc.username}"/>  
            <property name="password" value="${jdbc.password}"/>  
              
            <property name="maxPoolSize" value="${c3p0.pool.maxPoolSize}"/>  
            <property name="minPoolSize" value="${c3p0.pool.minPoolSize}" />  
            <property name="initialPoolSize" value="${c3p0.pool.initialPoolSize}"/>  
            <property name="acquireIncrement" value="${c3p0.pool.acquireIncrement}"/>   
        </bean>  
          
        <!-- 4.SessionFactory -->  
        <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
            <property name="dataSource" ref="dataSource"/>  
            <!-- 整合mybatis，包扫描mapper文件 -->  
            <property name="configLocation" value="classpath:mybaits-cfg.xml"></property>  
            <property name="mapperLocations" value="classpath:cn/com/wavenet/hydro/databaseOpt/mapper/base/*.xml"></property>  
        </bean>  
        
         <!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注入   
         遵循规范:将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录中.  
        自动扫描出来的mapper的bean的id为mapper类名(首字母小写)-->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.com.wavenet.hydro.databaseOpt.mapper.base" />
	</bean>
          
        <!-- 5.事务管理-->  
        <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource"/>  
        </bean>  
    
</beans>  